<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.employees</groupId>
	<artifactId>employees</artifactId>
	<version>1.0</version>
	<name>employees</name>
	<description>employees project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-logging-logback</artifactId>
			<version>0.46.0-alpha</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-ftp</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>jackson-module-kotlin</artifactId>
					<groupId>com.fasterxml.jackson.module</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-csv</artifactId>
			<version>2.13.4</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.13.4</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.10.3</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.10.3</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>4.1</version>
		</dependency>
				<!-- https://mvnrepository.com/artifact/com.google.api-client/google-api-client -->
		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
			<version>1.28.0</version>
		</dependency>

		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>3.8.0</version>
		</dependency>
	</dependencies>

	<build>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<includeSystemScope>true</includeSystemScope>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.2</version>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Establece la Sets the VM argument line used when unit tests are 
						run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Excluye los tests de integración cuando se ejecutan los tests unitarios. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/itest/java</source>
							</sources>
							<resources>
								<resource>
									<directory>src/itest/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Failsafe : Ejecuta los tests integrados -->
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<!-- Asegura que los goals de integration-test y verify del Failsafe 
						Maven plugin se ejecutan. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Establece el valor de la línea de argumentos de la VM utilizado 
								cuando se ejecutan los tests de integración. -->
							<argLine>${failsafeArgLine}</argLine>
							<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
							<includes>
								<include>**/*IT.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.1.201405082137</version>
				<executions>
					<!-- Prepara el agente de tiempo de ejecución de JaCoCo, el cual se 
						pasa como agumento a la VM cuando Maven ejecuta el plugin Surefire plugin. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Establece la ruta al fichero que contiene los datos de ejecución. -->
							<destFile>${project.build.directory}/jacoco.exec</destFile>
							<!-- Establece el nombre de la propiedad que contiene las configurationes 
								para el agente de tiempo de ejecución de JaCoCo. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Crea el informe de cobertura para los tests unitarios después que 
						los tests unitarios se hayan ejecutado. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Establece la ruta del fichero que contiene los datos de ejecución. -->
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
							<!-- Establece el directorio de destino donde se almacenarán los informes 
								de cobertura. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
						</configuration>
					</execution>
					<!-- Estas ejecuciones requieren que los tests unitarios se omitan. -->
					<!-- Prepara el agente de tiempo de ejecución de JaCoCo, el cual se 
						pasa como agumento a la VM cuando Maven ejecuta el plugin Failsafe plugin. -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Establece la ruta del fichero que contiene los datos de ejecución. -->
							<destFile>${project.build.directory}/jacoco-it.exec</destFile>
							<!-- Establece el nombre de la propiedad que contiene la configuración 
								para el agente en tiempo de ejecución de JaCoCo. -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>

					<!-- Crea el informe de cobertura para los tests de integración después 
						que los tests de integración se hayan ejecutado. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Establece la ruta del fichero que contiene los datos de ejecución. -->
							<dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
							<!-- Establece el directorio de destino donde se almacenarán los informes 
								de cobertura. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>

				</executions>
			</plugin>

		</plugins>
	</build>

</project>
